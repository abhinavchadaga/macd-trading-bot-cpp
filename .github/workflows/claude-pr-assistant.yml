name: Claude PR Assistant

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  claude-pr-description:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR context
        id: pr-context
        run: |
          # Get the complete diff for the PR
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          git diff $BASE_SHA..$HEAD_SHA > full_pr_diff.txt

          # Get commit messages
          git log --pretty=format:"%h %s" $BASE_SHA..$HEAD_SHA > commit_messages.txt

          # Create context file for Claude
          cat > claude_context.txt << EOF
          Pull Request Title: ${{ github.event.pull_request.title }}
          Author: ${{ github.event.pull_request.user.login }}

          Commit Messages:
          $(cat commit_messages.txt)

          Complete Code Diff:
          $(cat full_pr_diff.txt)
          EOF

      - name: Generate PR description with Claude
        id: claude-step
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "10"
          direct_prompt: |
            You are a technical writer helping to create a clear and concise pull request description.

            Based on the pull request context provided in claude_context.txt, please:

            1. Analyze the code changes and commit messages
            2. Generate a well-structured PR description that includes:
               - A brief summary of what this PR does
               - Key changes made
               - Any relevant technical details
               - Testing considerations if applicable
            3. Write the generated description to a file called 'generated_description.md'. Do not update the pull request description directly.

            Format your response in GitHub Markdown. Focus on being clear, concise, and helpful for code reviewers.

            The context file contains the PR title, author, commit messages, and complete code diff for analysis.

      - name: Update PR description
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            function readMarkdownFile(filePath) {
              try {
                if (!fs.existsSync(filePath)) {
                  throw new Error(`File does not exist: ${filePath}`);
                }

                const stats = fs.statSync(filePath);
                if (stats.size === 0) {
                  throw new Error('File is empty');
                }

                const buffer = fs.readFileSync(filePath);

                let content = buffer.toString('utf8');

                if (content.charCodeAt(0) === 0xFEFF) {
                  content = content.slice(1);
                }

                if (content.includes('\uFFFD')) {
                  console.warn('Warning: File may contain invalid UTF-8 sequences');
                }

                return content.trim();

              } catch (error) {
                throw new Error(`Failed to read markdown file '${filePath}': ${error.message}`);
              }
            }

            description = readMarkdownFile('generated_description.md');

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: description
            });

            console.log('PR description updated successfully with generated content');

            try {
              fs.unlinkSync('generated_description.md');
              console.log('Cleaned up generated_description.md file');
            } catch (error) {
              console.log('Warning: Could not delete generated_description.md:', error.message);
            }
