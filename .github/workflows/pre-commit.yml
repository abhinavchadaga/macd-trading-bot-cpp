name: Pre-commit checks

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install LLVM and Clang
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format clang-tidy

    - name: Install CMake
      run: |
        sudo apt-get install -y cmake ninja-build

    - name: Install OpenSSL
      run: |
        sudo apt-get install -y libssl-dev

    - name: Generate compilation database
      run: |
        mkdir -p cmake-build-debug
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -S . -B cmake-build-debug

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1
      with:
        extra_args: --all-files

  conventional-commits:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check commit messages
      run: |
        # Get all commit messages in this PR
        git log --format=%s origin/${{ github.base_ref }}..HEAD | while read msg; do
          if ! echo "$msg" | grep -qE '^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+'; then
            echo "❌ Invalid commit message: $msg"
            echo "Commit messages must follow Conventional Commits format:"
            echo "type(scope): description"
            echo "Examples: feat: add new feature, fix(api): handle error case"
            exit 1
          else
            echo "✅ Valid commit message: $msg"
          fi
        done
