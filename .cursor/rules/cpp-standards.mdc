---
description:
globs:
alwaysApply: true
---
# C++ Coding Standards

## Language Standards
- Use modern C++20 constructs when writing code
- Follow the C++ Core Guidelines
- Use braced initialization `{}` over copy initialization `=` or parentheses `()`
- Follow good OOP design principles

## Code Documentation
- Make code self-documenting through proper naming of variables and functions
- Never include inline comments in implementations
- Use docstrings for class and function level documentation only
- Variable and function names should clearly express their purpose

## Class Structure
Classes should be organized in the following order:
1. Static members
2. Public functions
3. Protected functions
4. Private functions
5. Public members
6. Protected members
7. Private members

## Naming Conventions
- Use `_` as a prefix for instance variables
- Follow snake_case for variables, functions, and class names
- Use ALL_CAPS for constants and macros

See [project-architecture.mdc](mdc:project-architecture.mdc) for additional architectural patterns.
